#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProvisioningPortal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Shoprite")]
	public partial class ShopriteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    #endregion
		
		public ShopriteDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShopriteConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendors")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _VendorName;
		
		private string _VendorUserName;
		
		private string _VendorPassWord;
		
		private System.Nullable<int> _Enabled;
		
		private System.Nullable<int> _EnableClaims;
		
		private System.Nullable<System.DateTime> _LastActionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnVendorUserNameChanging(string value);
    partial void OnVendorUserNameChanged();
    partial void OnVendorPassWordChanging(string value);
    partial void OnVendorPassWordChanged();
    partial void OnEnabledChanging(System.Nullable<int> value);
    partial void OnEnabledChanged();
    partial void OnEnableClaimsChanging(System.Nullable<int> value);
    partial void OnEnableClaimsChanged();
    partial void OnLastActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActionDateChanged();
    #endregion
		
		public Vendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorUserName", DbType="NVarChar(50)")]
		public string VendorUserName
		{
			get
			{
				return this._VendorUserName;
			}
			set
			{
				if ((this._VendorUserName != value))
				{
					this.OnVendorUserNameChanging(value);
					this.SendPropertyChanging();
					this._VendorUserName = value;
					this.SendPropertyChanged("VendorUserName");
					this.OnVendorUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPassWord", DbType="NVarChar(50)")]
		public string VendorPassWord
		{
			get
			{
				return this._VendorPassWord;
			}
			set
			{
				if ((this._VendorPassWord != value))
				{
					this.OnVendorPassWordChanging(value);
					this.SendPropertyChanging();
					this._VendorPassWord = value;
					this.SendPropertyChanged("VendorPassWord");
					this.OnVendorPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Int")]
		public System.Nullable<int> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableClaims", DbType="Int")]
		public System.Nullable<int> EnableClaims
		{
			get
			{
				return this._EnableClaims;
			}
			set
			{
				if ((this._EnableClaims != value))
				{
					this.OnEnableClaimsChanging(value);
					this.SendPropertyChanging();
					this._EnableClaims = value;
					this.SendPropertyChanged("EnableClaims");
					this.OnEnableClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActionDate
		{
			get
			{
				return this._LastActionDate;
			}
			set
			{
				if ((this._LastActionDate != value))
				{
					this.OnLastActionDateChanging(value);
					this.SendPropertyChanging();
					this._LastActionDate = value;
					this.SendPropertyChanged("LastActionDate");
					this.OnLastActionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
